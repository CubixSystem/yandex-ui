// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select@desktop client environment должен вернуть полный шаблон компонента (snapshot) 1`] = `
<RegistryResolver(Select2)
  className="mix"
  id="clientTemplateId"
  options={
    Array [
      Object {
        "content": "Тест",
        "value": "1",
      },
    ]
  }
>
  <WithTogglable
    className="mix"
    id="clientTemplateId"
    options={
      Array [
        Object {
          "content": "Тест",
          "value": "1",
        },
      ]
    }
  >
    <RegistryResolver(Select2)
      className="mix"
      id="clientTemplateId"
      opened={false}
      options={
        Array [
          Object {
            "content": "Тест",
            "value": "1",
          },
        ]
      }
      setOpened={[Function]}
    >
      <Select2@desktop
        className="mix"
        id="clientTemplateId"
        opened={false}
        options={
          Array [
            Object {
              "content": "Тест",
              "value": "1",
            },
          ]
        }
        setOpened={[Function]}
      >
        <ComponentRegistryConsumer
          id="Select2"
        >
          <RenderOverrideProvider
            component={[Function]}
          >
            <Select2
              addonAfter={
                <React.Fragment>
                  <RegistryResolver(Popup2)
                    anchor={
                      Object {
                        "current": <button
                          aria-expanded="false"
                          aria-haspopup="true"
                          aria-multiselectable="false"
                          aria-pressed="false"
                          autocomplete="off"
                          class="Button2 Select2-Button"
                          role="listbox"
                          type="button"
                        >
                          <span
                            aria-hidden="true"
                            class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                          />
                          <span
                            class="Button2-Text"
                          >
                            —
                          </span>
                        </button>,
                      }
                    }
                    className="Select2-Popup"
                    direction={
                      Array [
                        "bottom-start",
                        "bottom-end",
                        "top-start",
                        "top-end",
                      ]
                    }
                    innerRef={[Function]}
                    modifiers={
                      Array [
                        Object {
                          "effect": [Function],
                          "enabled": true,
                          "fn": [Function],
                          "name": "applyMinWidth",
                          "phase": "beforeWrite",
                          "requires": Array [
                            "computeStyles",
                          ],
                        },
                        Object {
                          "enabled": true,
                          "fn": [Function],
                          "name": "applyMaxHeight",
                          "options": Object {
                            "maxHeight": undefined,
                          },
                          "phase": "main",
                          "requires": Array [
                            "computeStyles",
                          ],
                        },
                      ]
                    }
                    onClose={[Function]}
                    scope={
                      Object {
                        "current": <span
                          class="Select2 mix"
                        >
                          <button
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-multiselectable="false"
                            aria-pressed="false"
                            autocomplete="off"
                            class="Button2 Select2-Button"
                            role="listbox"
                            type="button"
                          >
                            <span
                              aria-hidden="true"
                              class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                            />
                            <span
                              class="Button2-Text"
                            >
                              —
                            </span>
                          </button>
                        </span>,
                      }
                    }
                    target="anchor"
                    visible={false}
                  >
                    <RenderOverride
                      className="Select2-Menu"
                      focused={false}
                      items={
                        Array [
                          Object {
                            "content": "Тест",
                            "value": "1",
                          },
                        ]
                      }
                      onActiveItemChange={[Function]}
                      onChange={[Function]}
                      width="max"
                    />
                  </RegistryResolver(Popup2)>
                </React.Fragment>
              }
              className="mix"
              id="clientTemplateId"
              innerRef={[Function]}
              onBlur={[Function]}
              onClick={[Function]}
              onKeyDown={[Function]}
              opened={false}
              options={
                Array [
                  Object {
                    "content": "Тест",
                    "value": "1",
                  },
                ]
              }
              placeholder="—"
              setOpened={[Function]}
              triggerRef={
                Object {
                  "current": <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    aria-multiselectable="false"
                    aria-pressed="false"
                    autocomplete="off"
                    class="Button2 Select2-Button"
                    role="listbox"
                    type="button"
                  >
                    <span
                      aria-hidden="true"
                      class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                    />
                    <span
                      class="Button2-Text"
                    >
                      —
                    </span>
                  </button>,
                }
              }
              value=""
            >
              <ComponentRegistryConsumer
                id="Select2"
              >
                <MultiRenderOverrideProvider
                  components={
                    Array [
                      Array [
                        [Function],
                        undefined,
                      ],
                      Array [
                        [Function],
                        undefined,
                      ],
                    ]
                  }
                >
                  <span
                    className="Select2 mix"
                  >
                    <RenderOverride
                      aria-expanded={false}
                      aria-haspopup="true"
                      aria-multiselectable={false}
                      checked={false}
                      className="Select2-Button"
                      iconRight={[Function]}
                      innerRef={
                        Object {
                          "current": <button
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-multiselectable="false"
                            aria-pressed="false"
                            autocomplete="off"
                            class="Button2 Select2-Button"
                            role="listbox"
                            type="button"
                          >
                            <span
                              aria-hidden="true"
                              class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                            />
                            <span
                              class="Button2-Text"
                            >
                              —
                            </span>
                          </button>,
                        }
                      }
                      onBlur={[Function]}
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      pressKeys={
                        Array [
                          32,
                        ]
                      }
                      role="listbox"
                      width="max"
                    >
                      <Button2
                        aria-expanded={false}
                        aria-haspopup="true"
                        aria-multiselectable={false}
                        as="button"
                        autoComplete="off"
                        checked={false}
                        className="Select2-Button"
                        iconRight={[Function]}
                        innerRef={
                          Object {
                            "current": <button
                              aria-expanded="false"
                              aria-haspopup="true"
                              aria-multiselectable="false"
                              aria-pressed="false"
                              autocomplete="off"
                              class="Button2 Select2-Button"
                              role="listbox"
                              type="button"
                            >
                              <span
                                aria-hidden="true"
                                class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                              />
                              <span
                                class="Button2-Text"
                              >
                                —
                              </span>
                            </button>,
                          }
                        }
                        onBlur={[Function]}
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        pressKeys={
                          Array [
                            32,
                          ]
                        }
                        prvntKeys={Array []}
                        role="listbox"
                        type="button"
                        width="max"
                      >
                        <button
                          aria-expanded={false}
                          aria-haspopup="true"
                          aria-multiselectable={false}
                          aria-pressed={false}
                          autoComplete="off"
                          className="Button2 Select2-Button"
                          disabled={false}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          role="listbox"
                          type="button"
                        >
                          <Component
                            provider={[Function]}
                            side="right"
                          >
                            <RenderOverride
                              className="Button2-Icon Button2-Icon_side_right"
                              direction="bottom"
                              type="arrow"
                            >
                              <Icon
                                className="Button2-Icon Button2-Icon_side_right"
                                direction="bottom"
                                type="arrow"
                              >
                                <span
                                  aria-hidden={true}
                                  className="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                                  style={Object {}}
                                />
                              </Icon>
                            </RenderOverride>
                          </Component>
                          <Component>
                            <span
                              className="Button2-Text"
                            >
                              —
                            </span>
                          </Component>
                        </button>
                      </Button2>
                    </RenderOverride>
                    <RegistryResolver(Popup2)
                      anchor={
                        Object {
                          "current": <button
                            aria-expanded="false"
                            aria-haspopup="true"
                            aria-multiselectable="false"
                            aria-pressed="false"
                            autocomplete="off"
                            class="Button2 Select2-Button"
                            role="listbox"
                            type="button"
                          >
                            <span
                              aria-hidden="true"
                              class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                            />
                            <span
                              class="Button2-Text"
                            >
                              —
                            </span>
                          </button>,
                        }
                      }
                      className="Select2-Popup"
                      direction={
                        Array [
                          "bottom-start",
                          "bottom-end",
                          "top-start",
                          "top-end",
                        ]
                      }
                      innerRef={[Function]}
                      modifiers={
                        Array [
                          Object {
                            "effect": [Function],
                            "enabled": true,
                            "fn": [Function],
                            "name": "applyMinWidth",
                            "phase": "beforeWrite",
                            "requires": Array [
                              "computeStyles",
                            ],
                          },
                          Object {
                            "enabled": true,
                            "fn": [Function],
                            "name": "applyMaxHeight",
                            "options": Object {
                              "maxHeight": undefined,
                            },
                            "phase": "main",
                            "requires": Array [
                              "computeStyles",
                            ],
                          },
                        ]
                      }
                      onClose={[Function]}
                      scope={
                        Object {
                          "current": <span
                            class="Select2 mix"
                          >
                            <button
                              aria-expanded="false"
                              aria-haspopup="true"
                              aria-multiselectable="false"
                              aria-pressed="false"
                              autocomplete="off"
                              class="Button2 Select2-Button"
                              role="listbox"
                              type="button"
                            >
                              <span
                                aria-hidden="true"
                                class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                              />
                              <span
                                class="Button2-Text"
                              >
                                —
                              </span>
                            </button>
                          </span>,
                        }
                      }
                      target="anchor"
                      visible={false}
                    >
                      <Popup2
                        anchor={
                          Object {
                            "current": <button
                              aria-expanded="false"
                              aria-haspopup="true"
                              aria-multiselectable="false"
                              aria-pressed="false"
                              autocomplete="off"
                              class="Button2 Select2-Button"
                              role="listbox"
                              type="button"
                            >
                              <span
                                aria-hidden="true"
                                class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                              />
                              <span
                                class="Button2-Text"
                              >
                                —
                              </span>
                            </button>,
                          }
                        }
                        className="Select2-Popup"
                        direction={
                          Array [
                            "bottom-start",
                            "bottom-end",
                            "top-start",
                            "top-end",
                          ]
                        }
                        innerRef={[Function]}
                        modifiers={
                          Array [
                            Object {
                              "effect": [Function],
                              "enabled": true,
                              "fn": [Function],
                              "name": "applyMinWidth",
                              "phase": "beforeWrite",
                              "requires": Array [
                                "computeStyles",
                              ],
                            },
                            Object {
                              "enabled": true,
                              "fn": [Function],
                              "name": "applyMaxHeight",
                              "options": Object {
                                "maxHeight": undefined,
                              },
                              "phase": "main",
                              "requires": Array [
                                "computeStyles",
                              ],
                            },
                          ]
                        }
                        onClose={[Function]}
                        scope={
                          Object {
                            "current": <span
                              class="Select2 mix"
                            >
                              <button
                                aria-expanded="false"
                                aria-haspopup="true"
                                aria-multiselectable="false"
                                aria-pressed="false"
                                autocomplete="off"
                                class="Button2 Select2-Button"
                                role="listbox"
                                type="button"
                              >
                                <span
                                  aria-hidden="true"
                                  class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                                />
                                <span
                                  class="Button2-Text"
                                >
                                  —
                                </span>
                              </button>
                            </span>,
                          }
                        }
                        target="anchor"
                        visible={false}
                      />
                    </RegistryResolver(Popup2)>
                  </span>
                </MultiRenderOverrideProvider>
              </ComponentRegistryConsumer>
            </Select2>
          </RenderOverrideProvider>
        </ComponentRegistryConsumer>
      </Select2@desktop>
    </RegistryResolver(Select2)>
  </WithTogglable>
</RegistryResolver(Select2)>
`;

exports[`Select@desktop server environment должен вернуть полный шаблон компонента (snapshot) 1`] = `
<span
  class="Select2 mix"
>
  <button
    aria-expanded="false"
    aria-haspopup="true"
    aria-multiselectable="false"
    aria-pressed="false"
    autocomplete="off"
    class="Button2 Select2-Button"
    role="listbox"
    type="button"
  >
    <span
      aria-hidden="true"
      class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
    />
    <span
      class="Button2-Text"
    >
      —
    </span>
  </button>
</span>
`;

exports[`Select@touch-pad client environment должен вернуть полный шаблон компонента (snapshot) 1`] = `
<RegistryResolver(Select2)
  className="mix"
  id="clientTemplateId"
  options={
    Array [
      Object {
        "content": "Тест",
        "value": "1",
      },
    ]
  }
>
  <RegistryResolver(Select2)
    className="mix"
    id="clientTemplateId"
    options={
      Array [
        Object {
          "content": "Тест",
          "value": "1",
        },
      ]
    }
  >
    <Component
      className="mix"
      id="clientTemplateId"
      options={
        Array [
          Object {
            "content": "Тест",
            "value": "1",
          },
        ]
      }
    >
      <Select2
        addonAfter={
          <React.Fragment>
            <select
              className="Select2-Control"
              multiple={false}
              tabIndex={-1}
            >
              <option
                value="1"
              >
                Тест
              </option>
            </select>
          </React.Fragment>
        }
        className="mix"
        id="clientTemplateId"
        options={
          Array [
            Object {
              "content": "Тест",
              "value": "1",
            },
          ]
        }
        placeholder="—"
        value=""
      >
        <ComponentRegistryConsumer
          id="Select2"
        >
          <MultiRenderOverrideProvider
            components={
              Array [
                Array [
                  [Function],
                  undefined,
                ],
                Array [
                  [Function],
                  undefined,
                ],
              ]
            }
          >
            <span
              className="Select2 mix"
            >
              <RenderOverride
                aria-haspopup="true"
                aria-multiselectable={false}
                checked={false}
                className="Select2-Button"
                iconRight={[Function]}
                innerRef={
                  Object {
                    "current": <button
                      aria-haspopup="true"
                      aria-multiselectable="false"
                      aria-pressed="false"
                      autocomplete="off"
                      class="Button2 Select2-Button"
                      role="listbox"
                      type="button"
                    >
                      <span
                        aria-hidden="true"
                        class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                      />
                      <span
                        class="Button2-Text"
                      >
                        —
                      </span>
                    </button>,
                  }
                }
                pressKeys={
                  Array [
                    32,
                  ]
                }
                role="listbox"
                width="max"
              >
                <Button2
                  aria-haspopup="true"
                  aria-multiselectable={false}
                  as="button"
                  autoComplete="off"
                  checked={false}
                  className="Select2-Button"
                  iconRight={[Function]}
                  innerRef={
                    Object {
                      "current": <button
                        aria-haspopup="true"
                        aria-multiselectable="false"
                        aria-pressed="false"
                        autocomplete="off"
                        class="Button2 Select2-Button"
                        role="listbox"
                        type="button"
                      >
                        <span
                          aria-hidden="true"
                          class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                        />
                        <span
                          class="Button2-Text"
                        >
                          —
                        </span>
                      </button>,
                    }
                  }
                  pressKeys={
                    Array [
                      32,
                    ]
                  }
                  prvntKeys={Array []}
                  role="listbox"
                  type="button"
                  width="max"
                >
                  <button
                    aria-haspopup="true"
                    aria-multiselectable={false}
                    aria-pressed={false}
                    autoComplete="off"
                    className="Button2 Select2-Button"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    role="listbox"
                    type="button"
                  >
                    <Component
                      provider={[Function]}
                      side="right"
                    >
                      <RenderOverride
                        className="Button2-Icon Button2-Icon_side_right"
                        direction="bottom"
                        type="arrow"
                      >
                        <Icon
                          className="Button2-Icon Button2-Icon_side_right"
                          direction="bottom"
                          type="arrow"
                        >
                          <span
                            aria-hidden={true}
                            className="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                            style={Object {}}
                          />
                        </Icon>
                      </RenderOverride>
                    </Component>
                    <Component>
                      <span
                        className="Button2-Text"
                      >
                        —
                      </span>
                    </Component>
                  </button>
                </Button2>
              </RenderOverride>
              <select
                className="Select2-Control"
                multiple={false}
                tabIndex={-1}
              >
                <option
                  key="1"
                  value="1"
                >
                  Тест
                </option>
              </select>
            </span>
          </MultiRenderOverrideProvider>
        </ComponentRegistryConsumer>
      </Select2>
    </Component>
  </RegistryResolver(Select2)>
</RegistryResolver(Select2)>
`;

exports[`Select@touch-pad server environment должен вернуть полный шаблон компонента (snapshot) 1`] = `
<span
  class="Select2 mix"
>
  <button
    aria-haspopup="true"
    aria-multiselectable="false"
    aria-pressed="false"
    autocomplete="off"
    class="Button2 Select2-Button"
    role="listbox"
    type="button"
  >
    <span
      aria-hidden="true"
      class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
    />
    <span
      class="Button2-Text"
    >
      —
    </span>
  </button>
  <select
    class="Select2-Control"
    tabindex="-1"
  >
    <option
      value="1"
    >
      Тест
    </option>
  </select>
</span>
`;

exports[`Select@touch-phone client environment должен вернуть полный шаблон компонента (snapshot) 1`] = `
<RegistryResolver(Select2)
  className="mix"
  id="clientTemplateId"
  options={
    Array [
      Object {
        "content": "Тест",
        "value": "1",
      },
    ]
  }
>
  <RegistryResolver(Select2)
    className="mix"
    id="clientTemplateId"
    options={
      Array [
        Object {
          "content": "Тест",
          "value": "1",
        },
      ]
    }
  >
    <Component
      className="mix"
      id="clientTemplateId"
      options={
        Array [
          Object {
            "content": "Тест",
            "value": "1",
          },
        ]
      }
    >
      <Select2
        addonAfter={
          <React.Fragment>
            <select
              className="Select2-Control"
              multiple={false}
              tabIndex={-1}
            >
              <option
                value="1"
              >
                Тест
              </option>
            </select>
          </React.Fragment>
        }
        className="mix"
        id="clientTemplateId"
        options={
          Array [
            Object {
              "content": "Тест",
              "value": "1",
            },
          ]
        }
        placeholder="—"
        value=""
      >
        <ComponentRegistryConsumer
          id="Select2"
        >
          <MultiRenderOverrideProvider
            components={
              Array [
                Array [
                  [Function],
                  undefined,
                ],
                Array [
                  [Function],
                  undefined,
                ],
              ]
            }
          >
            <span
              className="Select2 mix"
            >
              <RenderOverride
                aria-haspopup="true"
                aria-multiselectable={false}
                checked={false}
                className="Select2-Button"
                iconRight={[Function]}
                innerRef={
                  Object {
                    "current": <button
                      aria-haspopup="true"
                      aria-multiselectable="false"
                      aria-pressed="false"
                      autocomplete="off"
                      class="Button2 Select2-Button"
                      role="listbox"
                      type="button"
                    >
                      <span
                        aria-hidden="true"
                        class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                      />
                      <span
                        class="Button2-Text"
                      >
                        —
                      </span>
                    </button>,
                  }
                }
                pressKeys={
                  Array [
                    32,
                  ]
                }
                role="listbox"
                width="max"
              >
                <Button2
                  aria-haspopup="true"
                  aria-multiselectable={false}
                  as="button"
                  autoComplete="off"
                  checked={false}
                  className="Select2-Button"
                  iconRight={[Function]}
                  innerRef={
                    Object {
                      "current": <button
                        aria-haspopup="true"
                        aria-multiselectable="false"
                        aria-pressed="false"
                        autocomplete="off"
                        class="Button2 Select2-Button"
                        role="listbox"
                        type="button"
                      >
                        <span
                          aria-hidden="true"
                          class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                        />
                        <span
                          class="Button2-Text"
                        >
                          —
                        </span>
                      </button>,
                    }
                  }
                  pressKeys={
                    Array [
                      32,
                    ]
                  }
                  prvntKeys={Array []}
                  role="listbox"
                  type="button"
                  width="max"
                >
                  <button
                    aria-haspopup="true"
                    aria-multiselectable={false}
                    aria-pressed={false}
                    autoComplete="off"
                    className="Button2 Select2-Button"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    role="listbox"
                    type="button"
                  >
                    <Component
                      provider={[Function]}
                      side="right"
                    >
                      <RenderOverride
                        className="Button2-Icon Button2-Icon_side_right"
                        direction="bottom"
                        type="arrow"
                      >
                        <Icon
                          className="Button2-Icon Button2-Icon_side_right"
                          direction="bottom"
                          type="arrow"
                        >
                          <span
                            aria-hidden={true}
                            className="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
                            style={Object {}}
                          />
                        </Icon>
                      </RenderOverride>
                    </Component>
                    <Component>
                      <span
                        className="Button2-Text"
                      >
                        —
                      </span>
                    </Component>
                  </button>
                </Button2>
              </RenderOverride>
              <select
                className="Select2-Control"
                multiple={false}
                tabIndex={-1}
              >
                <option
                  key="1"
                  value="1"
                >
                  Тест
                </option>
              </select>
            </span>
          </MultiRenderOverrideProvider>
        </ComponentRegistryConsumer>
      </Select2>
    </Component>
  </RegistryResolver(Select2)>
</RegistryResolver(Select2)>
`;

exports[`Select@touch-phone server environment должен вернуть полный шаблон компонента (snapshot) 1`] = `
<span
  class="Select2 mix"
>
  <button
    aria-haspopup="true"
    aria-multiselectable="false"
    aria-pressed="false"
    autocomplete="off"
    class="Button2 Select2-Button"
    role="listbox"
    type="button"
  >
    <span
      aria-hidden="true"
      class="Icon Icon_direction_bottom Button2-Icon Button2-Icon_side_right"
    />
    <span
      class="Button2-Text"
    >
      —
    </span>
  </button>
  <select
    class="Select2-Control"
    tabindex="-1"
  >
    <option
      value="1"
    >
      Тест
    </option>
  </select>
</span>
`;
